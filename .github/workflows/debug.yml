name: Build Android ARM

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [arm, arm64, 386] # bisa tambahkan armv7 via 386 jika perlu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install Android NDK (needed for android build)
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O ndk.zip
          unzip ndk.zip -d $HOME/ndk
          echo "NDK_HOME=$HOME/ndk/android-ndk-r25b" >> $GITHUB_ENV
          echo "$HOME/ndk/android-ndk-r25b/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Set environment variables
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          echo "GOOS=android" >> $GITHUB_ENV
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            echo "GOARCH=arm" >> $GITHUB_ENV
            echo "CC=armv7a-linux-androideabi21-clang" >> $GITHUB_ENV
          elif [ "${{ matrix.goarch }}" = "arm64" ]; then
            echo "GOARCH=arm64" >> $GITHUB_ENV
            echo "CC=aarch64-linux-android21-clang" >> $GITHUB_ENV
          elif [ "${{ matrix.goarch }}" = "386" ]; then
            echo "GOARCH=386" >> $GITHUB_ENV
            echo "CC=i686-linux-android21-clang" >> $GITHUB_ENV
          fi

      - name: Build binary
        run: |
          mkdir -p build/${{ matrix.goarch }}
          go build -v -o build/${{ matrix.goarch }}/bot .

      - name: Prepare files for artifact
        run: |
          mkdir -p artifact
          cp build/${{ matrix.goarch }}/bot artifact/
          cp bot.ini artifact/
          cp docs/bot.sh artifact/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bot-${{ matrix.goarch }}
          path: artifact/*